{"version":3,"sources":["mapofkr.svg","pages/homeComponents/LocationListEntry.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Logout.js","pages/Content.js","pages/Mypage.js","App.js","reportWebVitals.js","index.js"],"names":["LocationListEntry","data","history","useHistory","className","onClick","push","style","flex","location","currentTemp","alt","src","currentWeatherIcon","withRouter","currentWeather","map","id","Login","props","handleIsMember","setState","isMember","state","handleInputValue","key","e","target","value","console","log","visitorLocation","handleLogin","a","preventDefault","userId","password","errorMessageForID","errorMessageForPW","axios","post","withCredentials","handleResponseSuccess","errorMessage","this","onSubmit","type","placeholder","onChange","to","textDecoration","color","React","Component","Signup","WriteUserInfo","handleErrorMessage","alert","handlerSignup_0","handlerSignup","email","username","location1","location2","bind","then","catch","err","Logout","isModalOpen","open","display","Content","handleTitleOnClick","handleLogout","completedLogout","handleFindFriend1","headers","findFriend1","friend1","friendNameArr","friend2","friend3","handleFindFriend2","findFriend2","friend4","friend5","friend6","handleChange","openModal","handleOnClick","handleHamburgerOnClick","isClick","locationFriends","location2_current_weather","location1_current_weather","location1_interval_weather","month","date","temp","location2_interval_weather","Mypage","handleLogoutOnClick","get","res","handleMyLocationOnClick1","handleMyLocationOnClick2","App","handleContent","getContent","includes","locationArr","split","first","rest","upperCase","result1","result2","charAt","slice","toUpperCase","i","intervalWeather","length","currentWeather1","currentWeather2","isLoggedin","getWeatherData","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab90d809.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mapofkr.fa7fcc45.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../App.css\";\n\n//지역 이름과 실시간 날씨(온도, 날씨아이콘)을 불러옴\n\nconst LocationListEntry = ({ data }) => {\n  // ! 날씨 버튼 누르면 로그인 페이지 이동\n  const history = useHistory();\n  const handleLocationClick = () => {\n    history.push(\"/login\");\n  };\n\n  return (\n    // <div className=\"locationbuttons\">\n    <button className=\"locationbuttons\" onClick={handleLocationClick}>\n      <div style={{ flex: 7 }}>\n        <div className=\"name\">{data.location}</div>\n        <p className=\"temperature\">{data.currentTemp}</p>\n        <img\n          // ! 추가 : alt안쓰면 에러뜸, 이미지 손상시 대체\n          alt=\"weatherIcon\"\n          src={`http://openweathermap.org/img/wn/${data.currentWeatherIcon}@2x.png`}\n        />\n      </div>\n    </button>\n    // </div>\n  );\n};\n\nexport default LocationListEntry;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport map from \"../mapofkr.svg\";\nimport LocationListEntry from \"./homeComponents/LocationListEntry\";\nimport \"./home.css\";\n\nconst Home = ({ currentWeather }) => {\n  // ! 수정 : 굳이 props로 안내리고 아래서 만듦\n  // const history = useHistory();\n  // const handleLocationClick = () => {\n  //   history.push(\"/login\");\n  // };\n  return (\n    <div className=\"home\">\n      <h1>Welcome to MayWeather Service</h1>\n      <img src={map} alt=\"Map\" className=\"map\" />\n      <div>\n        {currentWeather.map((data) => {\n          return <LocationListEntry key={data.id} data={data} />;\n        })}\n      </div>\n    </div>\n  );\n};\nexport default withRouter(Home);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"../App.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n      password: \"\",\n      errorMessage: null,\n      visitorLocation: \"\",\n      isMember: true,\n    };\n  }\n  // ! 추가 : 로그인 시 회원/비회원 선택\n  handleIsMember = () => {\n    this.setState({ isMember: !this.state.isMember });\n  };\n\n  handleInputValue = (key) => (e) => {\n    this.setState({ [key]: e.target.value });\n    console.log(this.state.visitorLocation);\n  };\n\n  handleLogin = async (e) => {\n    e.preventDefault();\n    const { userId, password } = this.state;\n    // 아이디 입력 안했을 시\n    if (this.state.userId === \"\") {\n      this.setState({ errorMessageForID: \"ID를 입력해 주세요\" });\n    } else {\n      this.setState({ errorMessageForID: null });\n    }\n    // 비밀번호 입력 안했을 시\n    if (this.state.password === \"\") {\n      this.setState({ errorMessageForPW: \"비밀번호를 입력해 주세요\" });\n    } else {\n      this.setState({ errorMessageForPW: null });\n    }\n    // 모두 입력 시\n    if (this.state.userId !== \"\" && this.state.password !== \"\") {\n      this.setState({ errorMessageForID: null });\n      this.setState({ errorMessageForPW: null });\n      const succeedLogin = await axios.post(\n        \"https://mayweather24.com/login\",\n        {\n          userId: userId,\n          password: password,\n        },\n        { withCredentials: true }\n      );\n      // 로그인 성공 시\n      if (succeedLogin) {\n        this.props.handleResponseSuccess();\n      }\n    }\n  };\n\n  render() {\n    const { isMember } = this.state;\n    const { handleIsMember } = this;\n    return isMember ? (\n      // ! 회원 로그인\n      // 1.로그인 페이지\n      <div className=\"loginpage\">\n        {/* 2. 버튼 */}\n        <div className=\"btnMemberOrNonmember\">\n          <ul>\n            <li className=\"firstLi\">\n              <button className=\"loginBtn_isMember\">회원 로그인</button>\n            </li>\n            <li className=\"secondLi\">\n              <button className=\"loginBtn_isMember\" onClick={handleIsMember}>\n                비회원 로그인\n              </button>\n            </li>\n          </ul>\n        </div>\n        {/* 3. 로그인 네모 칸 */}\n        <div className=\"login_box\">\n          <div className=\"login_box_isMember\">회원 로그인</div>\n          <form onSubmit={this.handleLogin}>\n            <input\n              className=\"login_input\"\n              type=\"text\"\n              placeholder=\"ID를 입력하세요\"\n              onChange={this.handleInputValue(\"userId\")}\n            ></input>\n            {<div className=\"errorMsg\">{this.state.errorMessageForID}</div>}\n            <div>\n              <input\n                className=\"login_input\"\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요\"\n                onChange={this.handleInputValue(\"password\")}\n              ></input>\n              {<div className=\"errorMsg\">{this.state.errorMessageForPW}</div>}\n            </div>\n            <button\n              className=\"loginBtn\"\n              type=\"submit\"\n              onClick={this.handleLogin}\n            >\n              로그인\n            </button>\n          </form>\n          <br />\n          <div>\n            {/* 밑줄 제거 */}\n            <Link\n              to=\"./signup\"\n              style={{ textDecoration: \"none\", color: \"#0066CC\" }}\n            >\n              <div className=\"login_box_isNotMember\">\n                아직 회원이 아니신가요?\n              </div>\n            </Link>\n            <br />\n          </div>\n        </div>\n      </div>\n    ) : (\n      // ! 비회원 로그인\n      // 1. 로그인 페이지\n      <div className=\"loginpage\">\n        {/* 2. 버튼 */}\n        <div className=\"btnMemberOrNonmember\">\n          <ul>\n            <li className=\"firstLi\">\n              <button className=\"loginBtn_isMember\" onClick={handleIsMember}>\n                회원 로그인\n              </button>\n            </li>\n            <li className=\"secondLi\">\n              <button className=\"loginBtn_isMember\">비회원 로그인</button>\n            </li>\n          </ul>\n        </div>\n        {/* 3. 로그인 네모 칸 */}\n        <div className=\"login_box\">\n          <div className=\"login_box_isMember\">비회원 로그인</div>\n          <span className=\"whichCity\">보고싶은 도시</span>\n          <select onChange={this.handleInputValue(\"visitorLocation\")}>\n            <option value=\"\">도시선택</option>\n            <option value=\"seoul\">서울</option>\n            <option value=\"incheon\">인천</option>\n            <option value=\"daegu\">대구</option>\n            <option value=\"gwangju\">광주</option>\n            <option value=\"busan\">부산</option>\n          </select>\n          <Link to=\"./content\">\n            <button>날씨 보기</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport \"./signup.css\";\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n      password: \"\",\n      email: \"\",\n      username: \"\",\n      location1: \"\",\n      location2: \"\",\n      errorMessage:\n        \"비어 있는 값이 있습니다. 혹은 중복된 도시가 선택되었습니다. 확인 바랍니다.\",\n    };\n    this.WriteUserInfo = this.WriteUserInfo.bind(this);\n    this.handlerSignup = this.handlerSignup.bind(this);\n  }\n  WriteUserInfo = (key) => (e) => {\n    this.setState({ [key]: e.target.value });\n  };\n  handleErrorMessage = () => {\n    <div>{alert(`${this.state.errorMessage}`)}</div>;\n  };\n  handlerSignup_0 = () => {\n    this.handlerSignup();\n  };\n  handlerSignup() {\n    if (\n      this.state.userId === \"\" || // 아이디값이 비어있을때\n      this.state.password === \"\" || // 비밀번호값이 비어있을때\n      this.state.email === \"\" || // 이메일이 비어있을때\n      this.state.username === \"\" || // 유저이름이 비어있을때 // 지역1이 비어있을 때\n      (this.state.location1 === \"\" && this.state.location2 === \"\") || // 도시 둘다 선택안했을 때\n      this.state.location1 === this.state.location2 // 도시 값이 둘다 같을 때\n    ) {\n      this.handleErrorMessage();\n    } else {\n      this.setState({\n        errorMessage: \"\",\n      });\n      if (this.state.location1 !== \"\" && this.state.location2 === \"\") {\n        // 도시1만 값이 있을 때\n        axios\n          .post(\n            \"https://mayweather24.com/signup\",\n            {\n              userId: this.state.userId,\n              password: this.state.password,\n              email: this.state.email,\n              username: this.state.username,\n              location: `${this.state.location1}`,\n            },\n            { withCredentials: true }\n          )\n          .then(() => this.props.history.push(\"/login\"))\n          .catch((err) => console.log(err));\n      } else if (this.state.location1 === \"\" && this.state.location2 !== \"\") {\n        // 도시2만 값이 있을 때\n        axios\n          .post(\n            \"https://mayweather24.com/signup\",\n            {\n              userId: this.state.userId,\n              password: this.state.password,\n              email: this.state.email,\n              username: this.state.username,\n              location: `${this.state.location2}`,\n            },\n            { withCredentials: true }\n          )\n          .then(() => this.props.history.push(\"/login\"))\n          .catch((err) => console.log(err));\n      } else {\n        // 둘다 값이 있을 때\n        axios\n          .post(\n            \"https://mayweather24.com/signup\",\n            {\n              userId: this.state.userId,\n              password: this.state.password,\n              email: this.state.email,\n              username: this.state.username,\n              location: `${this.state.location1},${this.state.location2}`,\n            },\n            { withCredentials: true }\n          )\n          .then(() => this.props.history.push(\"/login\"))\n          .catch((err) => console.log(err));\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"signupbox\">\n        <div className=\"signup\">\n          <h1>MayWeather</h1>\n          <h2>회원가입</h2>\n          <h2>모든 항목을 적어야 합니다.</h2>\n          <div>\n            <input\n              className=\"inputbox\"\n              type=\"text\"\n              placeholder=\"userId\"\n              onChange={this.WriteUserInfo(\"userId\")}\n            ></input>\n          </div>\n          <br></br>\n          <div>\n            <input\n              className=\"inputbox\"\n              type=\"password\"\n              placeholder=\"password\"\n              onChange={this.WriteUserInfo(\"password\")}\n            ></input>\n          </div>\n          <br></br>\n          <div>\n            <input\n              className=\"inputbox\"\n              type=\"email\"\n              placeholder=\"email\"\n              onChange={this.WriteUserInfo(\"email\")}\n            ></input>\n          </div>\n          <br></br>\n          <div>\n            <input\n              className=\"inputbox\"\n              type=\"text\"\n              placeholder=\"username\"\n              onChange={this.WriteUserInfo(\"username\")}\n            ></input>\n          </div>\n          <br></br>\n          <div>\n            <span className=\"signupfont\">첫번째 좋아하는 도시 : </span>\n            <select\n              value={this.state.value}\n              onChange={this.WriteUserInfo(\"location1\")}\n            >\n              {/* <optgroup label=\"도시를 선택하세요!\"></optgroup> */}\n              <option value=\"\">선택안함</option>\n              <option value=\"seoul\">서울</option>\n              <option value=\"incheon\">인천</option>\n              <option value=\"daegu\">대구</option>\n              <option value=\"gwangju\">광주</option>\n              <option value=\"busan\">부산</option>\n            </select>\n          </div>\n          <br></br>\n          <div>\n            <span className=\"signupfont\">두번째 좋아하는 도시 : </span>\n            <select\n              value={this.state.value}\n              onChange={this.WriteUserInfo(\"location2\")}\n            >\n              {/* <optgroup label=\"도시를 선택하세요!\"></optgroup> */}\n              <option value=\"\">선택안함</option>\n              <option value=\"seoul\">서울</option>\n              <option value=\"incheon\">인천</option>\n              <option value=\"daegu\">대구</option>\n              <option value=\"gwangju\">광주</option>\n              <option value=\"busan\">부산</option>\n            </select>\n          </div>\n          <br></br>\n          <div>\n            <button className=\"signupbtn\" onClick={this.handlerSignup_0}>\n              회원가입\n            </button>\n          </div>\n          <br></br>\n          <Link to=\"/login\" className=\"signupfont_0\">\n            이미 아이디가 있으신가요?\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\n// import axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./modal.css\";\n\nclass Logout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: this.props.open,\n    };\n  }\n\n  render() {\n    return (\n      <div\n        className=\"modal\"\n        style={{ display: this.props.open ? \"block\" : \"none\" }}\n      >\n        {this.props.open ? (\n          <div>\n            <h1 className=\"modal_0\">로그아웃 되었습니다</h1>\n            <div>\n              <Link to=\"./\" className=\"modal_1\">\n                홈으로 가기\n              </Link>\n            </div>\n            {/* <button>확인</button>\n            <button>아니요</button> */}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Logout);\n","import React from \"react\";\nimport Logout from \"./Logout\";\nimport \"./content.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\n/* App.js => props => Content.js\n<Content\n  userId={userId}\n  username={username}\n  email={email}\n  location1={location1}  // 유저가 선택한 지역\n  location2={location2}  // 유저가 선택한 지역\n  location1_current_weather={location1_current_weather}\n  location2_current_weather={location2_current_weather}\n  location1_interval_weather={location1_interval_weather}\n  location2_interval_weather={location2_interval_weather}\n></Content>;\n*/\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      locationFriends: \"\",\n      isClick: false,\n    };\n  }\n\n  handleTitleOnClick = () => {\n    this.props.history.push(\"/\");\n  };\n\n  // ! 로그아웃\n  handleLogout = async () => {\n    const completedLogout = await axios.post(\n      \"https://mayweather24.com/logout\",\n      null,\n      {\n        withCredentials: true,\n      }\n    );\n    console.log(\n      \"🚀 ~ file: App.js ~ line 24 ~ App ~ handleLogout= ~ completedLogout\",\n      completedLogout\n    );\n    this.props.history.push(\"/\");\n  };\n\n  // ! 친구 찾기 버튼 누를 때 씀. onClick={this.handleFindFriend(this.state.location1)}\n  handleFindFriend1 = async () => {\n    const findFriend1 = await axios.post(\n      \"https://mayweather24.com/friends\",\n      { location: this.props.location1 },\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      }\n    );\n    console.log(\n      \"🚀 ~ file: Content.js ~ line 55 ~ Content ~ handleFindFriend1= ~ findFriend1\",\n      findFriend1\n    );\n    this.setState({\n      friend1: findFriend1.data.friendNameArr[0],\n      friend2: findFriend1.data.friendNameArr[1],\n      friend3: findFriend1.data.friendNameArr[2],\n    });\n    console.log(\"this.state.friend1\", this.state.friend1);\n  };\n\n  handleFindFriend2 = async () => {\n    const findFriend2 = await axios.post(\n      \"https://mayweather24.com/friends\",\n      { location: this.props.location2 },\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      }\n    );\n    console.log(\n      \"🚀 ~ file: Content.js ~ line 67 ~ Content ~ handleFindFriend2= ~ findFriend2\",\n      findFriend2\n    );\n    this.setState({\n      friend4: findFriend2.data.friendNameArr[0],\n      friend5: findFriend2.data.friendNameArr[1],\n      friend6: findFriend2.data.friendNameArr[2],\n    });\n  };\n\n  handleChange = (key) => (e) => {\n    // 도시 상태 바꾸기\n    if (\n      this.state.location1 !== e.target.value &&\n      this.state.location2 !== e.target.value\n    ) {\n      this.setState({\n        [key]: e.target.value,\n      });\n    } else {\n      this.setState({\n        [key]: \"\",\n      });\n    }\n  };\n\n  // 모달창 상태 true 변경하기\n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  // 로그아웃 버튼 누르면 모달창 띄워지고 로그아웃 요청보내기\n  handleOnClick = () => {\n    this.openModal();\n    this.props.handleLogout();\n  };\n  // 햄버거\n  handleHamburgerOnClick = () => {\n    this.setState({ isClick: !this.state.isClick });\n  };\n\n  render() {\n    const { userId, username, email } = this.props;\n    const { isClick } = this.state;\n    return !this.props.location2_current_weather.location ? (\n      // ! 지역 1개만 고른 경우\n      <div className=\"content_js\">\n        {/* 햄버거 메뉴 */}\n        <div className=\"hamburger\" onClick={this.handleHamburgerOnClick}>\n          {/* isClick : false 햄버거 안눌렀을 때 */}\n          {!isClick ? (\n            <div className=\"burger\">\n              <div className=\"line1\"></div>\n              <div className=\"line2\"></div>\n              <div className=\"line3\"></div>\n            </div>\n          ) : (\n            //  isClick : true 햄버거 눌렀을 때\n            <div className=\"toggle burger\">\n              <div className=\"line1\"></div>\n              <div className=\"line2\"></div>\n              <div className=\"line3\"></div>\n            </div>\n          )}\n        </div>\n        {/* 햄버거 끝 */}\n\n        {/* 타이틀 */}\n        <div className=\"content_title\">Mayweather</div>\n\n        {!isClick ? (\n          <div>\n            {/* 지역 1 */}\n            <div className=\"weatherData\">\n              {/* 위치 아이콘/ 지역명/ 선택 아이콘 */}\n              <div className=\"currentLocation\">\n                {/* 위치 아이콘 */}\n                <img\n                  alt=\"locationIcon\"\n                  className=\"locationIcon\"\n                  src=\"https://www.weather.go.kr/w/resources/image/btn_map.png\"\n                ></img>\n                {/* 지역명 */}\n                <span className=\"currentLocationName\">\n                  {this.props.location1_current_weather.location}\n                </span>\n                {/* 선택 아이콘 */}\n                <img\n                  alt=\"choiceIcon\"\n                  className=\"choiceIcon\"\n                  src=\"https://www.weather.go.kr/w/resources/image/arrow_down.png\"\n                ></img>\n              </div>\n              {/* 지역 1의 현재 날씨 박스 */}\n              <div className=\"weatherBox\">\n                <ul className=\"currentWeatherUl\">\n                  {/* 현재 */}\n                  <li className=\"currentLi\">현재</li>\n\n                  <li>\n                    {/* 아이콘 */}\n                    <div>\n                      <img\n                        alt=\"weatherIcon\"\n                        className=\"currentIconLi\"\n                        src={`http://openweathermap.org/img/wn/${this.props.location1_current_weather.currentWeatherIcon}@2x.png`}\n                      />\n                    </div>\n\n                    {/* 온도 */}\n                    <div className=\"currentTempLi\">\n                      {this.props.location1_current_weather.currentTemp}℃\n                    </div>\n                  </li>\n                </ul>\n\n                {/* 지역 1의 인터벌 날씨 */}\n                <ul className=\"intervalWeatherUl\">\n                  <li>\n                    {/* 날짜 */}\n                    <div className=\"date\">\n                      {this.props.location1_interval_weather[0].month}\n                      {\"/\"}\n                      {this.props.location1_interval_weather[0].date}\n                    </div>\n                    {/* 시간 및 온도 */}\n                    <div className=\"time\">09시</div>\n                    <div className=\"temp\">\n                      {this.props.location1_interval_weather[0].temp}℃\n                    </div>\n                  </li>\n                  <li>\n                    {/* 날짜 */}\n                    <div className=\"date\">\n                      {this.props.location1_interval_weather[1].month}\n                      {\"/\"}\n                      {this.props.location1_interval_weather[1].date}\n                    </div>\n                    {/* 시간 및 온도 */}\n                    <div className=\"time\">12시</div>\n                    <div className=\"temp\">\n                      {this.props.location1_interval_weather[1].temp}℃\n                    </div>\n                  </li>\n                  <li>\n                    {/* 날짜 */}\n                    <div className=\"date\">\n                      {this.props.location1_interval_weather[2].month}\n                      {\"/\"}\n                      {this.props.location1_interval_weather[2].date}\n                    </div>\n                    {/* 시간 및 온도 */}\n                    <div className=\"time\">18시</div>\n                    <div className=\"temp\">\n                      {this.props.location1_interval_weather[2].temp}℃\n                    </div>\n                  </li>\n                </ul>\n                {/* 친구 찾기 */}\n                <ul className=\"findFriendsUl\">\n                  {/* 친구 찾기 버튼 */}\n                  <li>\n                    <button\n                      className=\"findFriends\"\n                      onClick={this.handleFindFriend1}\n                    >\n                      친구 찾기\n                    </button>\n                    {/* 친구 있을 시  */}\n                    <div className=\"friends\">{this.state.friend1}</div>\n                    <div className=\"friends\">{this.state.friend2}</div>\n                    <div className=\"friends\">{this.state.friend3}</div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            {/* 로그아웃 버튼 */}\n            {/* <button className=\"logoutBtn\" onClick={this.handleLogout}>\n          로그아웃\n        </button> */}\n          </div>\n        ) : (\n          // 지역 1개 고른 사람 친구없음\n          <div>\n            <ul className=\"hamburgerbar_menu_active\">\n              <li className=\"Link_li\">\n                <Link className=\"Link\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"Link_li\">\n                <Link className=\"Link\" to=\"/mypage\">\n                  mypage\n                </Link>\n              </li>\n              <li className=\"Link_li\" onClick={this.handleLogout}>\n                logout\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    ) : (\n      // ! 지역 2개 고른 경우\n      <div className=\"content_js\">\n        {/* 햄버거 메뉴 */}\n        <div className=\"hamburger\" onClick={this.handleHamburgerOnClick}>\n          {/* isClick : false 햄버거 안눌렀을 때 */}\n          {!isClick ? (\n            <div className=\"burger\">\n              <div className=\"line1\"></div>\n              <div className=\"line2\"></div>\n              <div className=\"line3\"></div>\n            </div>\n          ) : (\n            //  isClick : true 햄버거 눌렀을 때\n            <div className=\"toggle burger\">\n              <div className=\"line1\"></div>\n              <div className=\"line2\"></div>\n              <div className=\"line3\"></div>\n            </div>\n          )}\n        </div>\n        {/* 햄버거 끝 */}\n\n        {/* 타이틀 */}\n        <div className=\"content_title\">Mayweather</div>\n\n        {/* 일반 코드 시작 */}\n        <div>\n          {!isClick ? (\n            <div>\n              <div className=\"weatherData\">\n                {/* 위치 아이콘/ 지역명/ 선택 아이콘 */}\n                <div className=\"currentLocation\">\n                  {/* 위치 아이콘 */}\n                  <img\n                    alt=\"locationIcon\"\n                    className=\"locationIcon\"\n                    src=\"https://www.weather.go.kr/w/resources/image/btn_map.png\"\n                  ></img>\n                  {/* 지역명 */}\n                  <span className=\"currentLocationName\">\n                    {this.props.location1_current_weather.location}\n                  </span>\n                  {/* 선택 아이콘 */}\n                  <img\n                    alt=\"choiceIcon\"\n                    className=\"choiceIcon\"\n                    src=\"https://www.weather.go.kr/w/resources/image/arrow_down.png\"\n                  ></img>\n                </div>\n                {/* 지역 1의 현재 날씨 박스 */}\n                <div className=\"weatherBox\">\n                  <ul className=\"currentWeatherUl\">\n                    {/* 현재 */}\n                    <li className=\"currentLi\">현재</li>\n\n                    <li>\n                      {/* 아이콘 */}\n                      <div>\n                        <img\n                          alt=\"weatherIcon\"\n                          className=\"currentIconLi\"\n                          src={`http://openweathermap.org/img/wn/${this.props.location1_current_weather.currentWeatherIcon}@2x.png`}\n                        />\n                      </div>\n\n                      {/* 온도 */}\n                      <div className=\"currentTempLi\">\n                        {this.props.location1_current_weather.currentTemp}℃\n                      </div>\n                    </li>\n                  </ul>\n\n                  {/* 지역 1의 인터벌 날씨 */}\n                  <ul className=\"intervalWeatherUl\">\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location1_interval_weather[0].month}\n                        {\"/\"}\n                        {this.props.location1_interval_weather[0].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">09시</div>\n                      <div className=\"temp\">\n                        {this.props.location1_interval_weather[0].temp}℃\n                      </div>\n                    </li>\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location1_interval_weather[1].month}\n                        {\"/\"}\n                        {this.props.location1_interval_weather[1].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">12시</div>\n                      <div className=\"temp\">\n                        {this.props.location1_interval_weather[1].temp}℃\n                      </div>\n                    </li>\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location1_interval_weather[2].month}\n                        {\"/\"}\n                        {this.props.location1_interval_weather[2].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">18시</div>\n                      <div className=\"temp\">\n                        {this.props.location1_interval_weather[2].temp}℃\n                      </div>\n                    </li>\n                  </ul>\n                  {/* 친구 찾기 */}\n                  <ul className=\"findFriendsUl\">\n                    {/* 친구 찾기 버튼 */}\n                    <li>\n                      <button\n                        className=\"findFriends\"\n                        onClick={this.handleFindFriend1}\n                      >\n                        친구 찾기\n                      </button>\n                      {/* 친구 있을 시 */}\n                      <div className=\"friends\">{this.state.friend1}</div>\n                      <div className=\"friends\">{this.state.friend2}</div>\n                      <div className=\"friends\">{this.state.friend3}</div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"weatherData\">\n                {/* 위치 아이콘/ 지역명/ 선택 아이콘 */}\n                <div className=\"currentLocation\">\n                  {/* 위치 아이콘 */}\n                  <img\n                    alt=\"locationIcon\"\n                    className=\"locationIcon\"\n                    src=\"https://www.weather.go.kr/w/resources/image/btn_map.png\"\n                  ></img>\n                  {/* 지역명 */}\n                  <span className=\"currentLocationName\">\n                    {this.props.location2_current_weather.location}\n                  </span>\n                  {/* 선택 아이콘 */}\n                  <img\n                    alt=\"choiceIcon\"\n                    className=\"choiceIcon\"\n                    src=\"https://www.weather.go.kr/w/resources/image/arrow_down.png\"\n                  ></img>\n                </div>\n                {/* 지역 2의 현재 날씨 박스 */}\n                <div className=\"weatherBox\">\n                  <ul className=\"currentWeatherUl\">\n                    {/* 현재 */}\n                    <li className=\"currentLi\">현재</li>\n\n                    <li>\n                      {/* 아이콘 */}\n                      <div>\n                        <img\n                          alt=\"weatherIcon\"\n                          className=\"currentIconLi\"\n                          src={`http://openweathermap.org/img/wn/${this.props.location2_current_weather.currentWeatherIcon}@2x.png`}\n                        />\n                      </div>\n\n                      {/* 온도 */}\n                      <div className=\"currentTempLi\">\n                        {this.props.location2_current_weather.currentTemp}℃\n                      </div>\n                    </li>\n                  </ul>\n\n                  {/* 지역 2의 인터벌 날씨 */}\n                  <ul className=\"intervalWeatherUl\">\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location2_interval_weather[0].month}\n                        {\"/\"}\n                        {this.props.location2_interval_weather[0].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">09시</div>\n                      <div className=\"temp\">\n                        {this.props.location2_interval_weather[0].temp}℃\n                      </div>\n                    </li>\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location2_interval_weather[1].month}\n                        {\"/\"}\n                        {this.props.location2_interval_weather[1].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">12시</div>\n                      <div className=\"temp\">\n                        {this.props.location2_interval_weather[1].temp}℃\n                      </div>\n                    </li>\n                    <li>\n                      {/* 날짜 */}\n                      <div className=\"date\">\n                        {this.props.location2_interval_weather[2].month}\n                        {\"/\"}\n                        {this.props.location2_interval_weather[2].date}\n                      </div>\n                      {/* 시간 및 온도 */}\n                      <div className=\"time\">18시</div>\n                      <div className=\"temp\">\n                        {this.props.location2_interval_weather[2].temp}℃\n                      </div>\n                    </li>\n                  </ul>\n                  {/* 친구 찾기 */}\n                  <ul className=\"findFriendsUl\">\n                    {/* 친구 찾기 버튼 */}\n                    <li>\n                      <button\n                        className=\"findFriends\"\n                        onClick={this.handleFindFriend2}\n                      >\n                        친구 찾기\n                      </button>\n\n                      {/* 친구 있을 시  */}\n                      <div className=\"friends\">{this.state.friend4}</div>\n\n                      <div className=\"friends\">{this.state.friend5}</div>\n\n                      <div className=\"friends\">{this.state.friend6}</div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              ;\n            </div>\n          ) : (\n            // 지역 1개 고른 사람 친구없음\n            <div>\n              <ul className=\"hamburgerbar_menu_active\">\n                <li className=\"Link_li\">\n                  <Link className=\"Link\" to=\"/\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"Link_li\">\n                  <Link className=\"Link\" to=\"/mypage\">\n                    mypage\n                  </Link>\n                </li>\n                <li className=\"Link_li\" onClick={this.handleLogout}>\n                  logout\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Content);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\nimport Logout from \"./Logout\";\nimport \"../App.css\";\n\n/*\n1. location변경 버튼 클릭시 모달창으로 열리면서\n2. 화면에선택한 지역을 변경,\n3. 기존 지역과 변경된 지역 값을 보냄\n*/\n\n// function MyLocation({ value, handle })\n\nclass Mypage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      userId: \"\",\n      email: \"\",\n      location1: \"\",\n      location2: \"\",\n    };\n  }\n\n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  handleLogoutOnClick = () => {\n    this.openModal();\n    this.props.handleLogout();\n  };\n\n  // handleChangeMyLocation() { //지역 변경에 대한 내 요청\n  //     axios\n  //         .post(\"https://mayweather24.com/mypage\")\n  //         .then((res) => console.log(res))\n  //         .catch((err) => console.log(err));\n  // }\n\n  // handleMyLocationOnClick1 = () {\n  //     this.handleChangeMyLocation();\n  // }\n\n  // handleMyLocationOnClick2 = () {\n  //     this.handleChangeMyLocation();\n  // }\n\n  componentDidMount() {\n    axios\n      .get(\"https://mayweather24.com/content\", { withCredentials: true })\n      .then((res) => console.log(res))\n      .then((data) => {\n        console.log(\"***mypage data >>>>\", data);\n        // if ()\n        this.setState({\n          userId: data.userId,\n          username: data.username,\n          email: data.email,\n          location1: data.location, //지역1만 어떻게 받아지는지 확인 후 지역2 추가!\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <nav>\n          <ul className=\"mypage_navbar\">\n            <li className=\"mypage_tohome\">\n              <Link to=\"./\" className=\"home\">\n                Home\n              </Link>\n            </li>\n            <li className=\"mypage_logout\">\n              <button onClick={this.handleLogoutOnClick}>Logout</button>\n              <Logout open={this.state.isModalOpen}></Logout>\n            </li>\n          </ul>\n        </nav>\n\n        <center>\n          <h1>Mypage</h1>\n          <br />\n\n          {this.state.isModalOpen ? (\n            <div>\n              <Logout open={this.state.isModalOpen}></Logout>\n            </div>\n          ) : (\n            <></>\n          )}\n\n          <div className=\"mypage_userinfo\">\n            <div>ID {/*this.state.userId*/}</div>\n            <div>사용자명 {/*this.state.username*/}</div>\n            <div>이메일 {/*this.state.email*/}</div>\n            <div>\n              내가 선택한 지역 1 {/*this.state.location1*/}\n              <button onClick={this.handleMyLocationOnClick1}>변경</button>\n            </div>\n            <div>\n              내가 선택한 지역 2 {/*this.state.location1*/}\n              <button onClick={this.handleMyLocationOnClick2}>변경</button>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Mypage;\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Logout from \"./pages/Logout\";\nimport Content from \"./pages/Content\";\nimport Mypage from \"./pages/Mypage\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedin: false,\n    };\n  }\n\n  // ! 날씨 정보 가져오기\n  async componentDidMount() {\n    // 날씨 정보 가져옴\n    const getWeatherData = await axios(\"https://mayweather24.com\");\n    // console.log(\n    //   \"🚀 ~ file: App.js ~ line 36 ~ App ~ componentDidMount ~ getWeatherData\",\n    //   getWeatherData\n    // );\n\n    this.setState({\n      intervalWeather: getWeatherData.data.intervalWeather,\n      currentWeather: getWeatherData.data.currentWeather,\n    });\n\n    // console.log(\"this.state.currentWeather\", this.state.currentWeather);\n    // console.log(\"this.state.intervalWeather\", this.state.intervalWeather);\n  }\n\n  // ! 로그인 시 유저 컨텐트 가져오기, state에 location1,2 만들어줌\n  handleContent = async () => {\n    const getContent = await axios(\"https://mayweather24.com/content\", {\n      withCredentials: true,\n    });\n    // console.log(\n    //   \"🚀 ~ file: App.js ~ line 54 ~ App ~ componentDidMount ~ getContent\",\n    //   getContent\n    // );\n\n    // 도시 1개 일 때\n    if (!getContent.data.location.includes(\",\")) {\n      this.setState({\n        userId: getContent.data.userId,\n        username: getContent.data.username,\n        email: getContent.data.email,\n        location1: getContent.data.location,\n      });\n      console.log(\"handleContent 끝\");\n    } // 도시가 2개 일때\n    else {\n      const locationArr = getContent.data.location.split(\",\"); // [\"seoul\", \"daegu\"]\n      this.setState({\n        userId: getContent.data.userId,\n        username: getContent.data.username,\n        email: getContent.data.email,\n        location1: locationArr[0],\n        location2: locationArr[1],\n      });\n      console.log(\"handleContent 끝\");\n    }\n    // ?????합체\n    // };\n\n    //! 유저가 고른 지역의 날씨만 상태 만들어서 내려줌, 위에서 location1,2 만든 거 사용\n    // ????? handleUserContent = () => {\n    //!\n    // this.state.location 첫 글자 대문자 만들기, 인터벌 날씨 찾기 위함\n    let first = \"\";\n    let rest = \"\";\n    let upperCase = \"\";\n    let result1 = \"\";\n    let result2 = \"\";\n\n    console.log(\n      \"🚀 ~ file: App.js ~ line 79 ~ App ~ this.state.location1\",\n      this.state.location1 // ? 이게 console.log('handleContent 끝') 보다 빠름. 왜?\n    );\n    // 지역 1개일 때\n    if (!this.state.location2 && this.state.location1) {\n      first = this.state.location1.charAt(0);\n      rest = this.state.location1.slice(1);\n      upperCase = first.toUpperCase();\n      result1 = upperCase + rest;\n    }\n    // 지역 2개일 때\n    else if (this.state.location1 && this.state.location2) {\n      first = this.state.location1.charAt(0);\n      rest = this.state.location1.slice(1);\n      upperCase = first.toUpperCase();\n      result1 = upperCase + rest;\n\n      first = this.state.location2.charAt(0);\n      rest = this.state.location2.slice(1);\n      upperCase = first.toUpperCase();\n      result2 = upperCase + rest;\n    }\n\n    // 인터벌 날씨\n    for (let i = 0; i < this.state.intervalWeather.length; i++) {\n      // 지역 1개일 떄\n      if (!result2 && this.state.intervalWeather[i][result1]) {\n        this.setState({\n          location1_interval_weather: this.state.intervalWeather[i][result1],\n        });\n      } // 지역 2개일 때\n      else if (result2 && this.state.intervalWeather[i][result1]) {\n        this.setState({\n          location1_interval_weather: this.state.intervalWeather[i][result1],\n        });\n      }\n      if (result2 && this.state.intervalWeather[i][result2]) {\n        this.setState({\n          location2_interval_weather: this.state.intervalWeather[i][result2],\n        });\n      }\n    }\n    console.log(\n      \"🚀 ~ file: App.js ~ line 124 ~ App ~ location1_interval_weather\",\n      this.state.location1_interval_weather\n    );\n    console.log(\n      \"🚀 ~ file: App.js ~ line 125 ~ App ~ location1_interval_weather\",\n      this.state.location2_interval_weather\n    );\n\n    //!\n\n    let currentWeather1 = \"\";\n    let currentWeather2 = \"\";\n\n    // 현재 날씨\n    for (let i = 0; i < this.state.currentWeather.length; i++) {\n      // 지역 1개만 고른 경우\n      if (\n        !this.state.location2 &&\n        this.state.currentWeather[i].location === this.state.location1\n      ) {\n        currentWeather1 = this.state.currentWeather[i];\n        // this.props.history.push(\"/content\");\n      } // 지역 2개 고른 경우, 지역 1 담기\n      if (\n        this.state.location2 &&\n        this.state.currentWeather[i].location === this.state.location1\n      ) {\n        currentWeather1 = this.state.currentWeather[i];\n      }\n      // 지역 2개 고른 경우, 지역 2 담기\n      if (\n        this.state.location2 &&\n        this.state.currentWeather[i].location === this.state.location2\n      ) {\n        currentWeather2 = this.state.currentWeather[i];\n        // this.props.history.push(\"/content\"); // ? 어떻게 셋스테이트 위에 있는데 상태가 바뀌었을까?\n      }\n    }\n    this.setState({\n      location1_current_weather: currentWeather1,\n      location2_current_weather: currentWeather2,\n    });\n\n    this.props.history.push(\"/content\");\n  };\n\n  // 로그인 시 실행\n  handleResponseSuccess = () => {\n    this.handleContent();\n    // this.handleUserContent(); // 합침\n  };\n\n  render() {\n    const {\n      currentWeather,\n      intervalWeather,\n      userId,\n      username,\n      email,\n      location1,\n      location2,\n      location1_current_weather,\n      location2_current_weather,\n      location1_interval_weather,\n      location2_interval_weather,\n    } = this.state;\n    return currentWeather ? (\n      <div>\n        <Switch>\n          {/* 회원가입 */}\n          <Route exact path=\"/signup\" render={() => <Signup />} />\n          {/* 컨텐트 */}\n          <Route\n            exact\n            path=\"/content\"\n            render={() => (\n              <Content\n                // intervalWeather={intervalWeather}\n                // currentWeather={currentWeather}\n                userId={userId}\n                username={username}\n                email={email}\n                location1={location1}\n                location2={location2}\n                location1_current_weather={location1_current_weather}\n                location2_current_weather={location2_current_weather}\n                location1_interval_weather={location1_interval_weather}\n                location2_interval_weather={location2_interval_weather}\n              ></Content>\n            )}\n          ></Route>\n          {/* 로그아웃 */}\n          <Route exact path=\"/logout\" render={() => <Logout></Logout>}></Route>\n          {/* 로그인 */}\n          <Route\n            path=\"/login\"\n            render={() => (\n              <Login handleResponseSuccess={this.handleResponseSuccess} />\n            )}\n          />\n          {/* 마이페이지 */}\n          <Route\n            exact\n            path=\"/mypage\"\n            render={() => <Mypage handleLogout={this.handleLogout} />}\n          />\n          {/* 홈 */}\n          <Route\n            path=\"/\"\n            render={() => <Home currentWeather={currentWeather} />}\n          />\n        </Switch>\n      </div>\n    ) : (\n      <div>loading...</div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}